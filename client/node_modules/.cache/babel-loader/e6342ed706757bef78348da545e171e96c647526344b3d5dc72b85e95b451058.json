{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const LoginUser = createAsyncThunk(\"user/LoginUser\", async (user, thunkAPI) => {\n  try {\n    console.log(user.username);\n    console.log(user.password);\n    Axios.put('http://localhost:3000/login', {\n      username: user.username,\n      password: user.password\n    });\n    console.log(\"tes\");\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.log(\"error\");\n      const message = error.response.data.msg;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n});\nexport const getMe = createAsyncThunk(\"user/getMe\", async (_, thunkAPI) => {\n  try {\n    const response = await Axios.get('http://localhost:3000/me');\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      const message = error.response.data.msg;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n});\nexport const LogOut = createAsyncThunk(\"user/LogOut\", async () => {\n  await Axios.delete('http://localhost:5000/logout');\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(LoginUser.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(LoginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(LoginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n\n    // Get User Login\n    builder.addCase(getMe.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(getMe.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(getMe.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","initialState","user","isError","isSuccess","isLoading","message","LoginUser","thunkAPI","console","log","username","password","put","response","data","error","msg","rejectWithValue","getMe","_","get","LogOut","delete","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/adiwi/dtc-admin/client/src/admin/auth.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: \"\"\r\n}\r\n\r\nexport const LoginUser = createAsyncThunk(\"user/LoginUser\", async(user, thunkAPI) => {\r\n    try {\r\n        console.log(user.username);\r\n        console.log(user.password);\r\n        Axios.put('http://localhost:3000/login', {\r\n            username: user.username,\r\n            password: user.password\r\n        })\r\n        console.log(\"tes\");\r\n        return response.data;\r\n    } catch (error) {\r\n        if(error.response){\r\n            console.log(\"error\")\r\n            const message = error.response.data.msg;\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    }\r\n});\r\n\r\nexport const getMe = createAsyncThunk(\"user/getMe\", async(_, thunkAPI) => {\r\n    try {\r\n        const response = await Axios.get('http://localhost:3000/me');\r\n        return response.data;\r\n    } catch (error) {\r\n        if(error.response){\r\n            const message = error.response.data.msg;\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    }\r\n});\r\n\r\nexport const LogOut = createAsyncThunk(\"user/LogOut\", async() => {\r\n    await Axios.delete('http://localhost:5000/logout');\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers:{\r\n        reset: (state) => initialState\r\n    },\r\n    extraReducers:(builder) =>{\r\n        builder.addCase(LoginUser.pending, (state) =>{\r\n            state.isLoading = true;\r\n        });\r\n        builder.addCase(LoginUser.fulfilled, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isSuccess = true;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(LoginUser.rejected, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.message = action.payload;\r\n        })\r\n\r\n        // Get User Login\r\n        builder.addCase(getMe.pending, (state) =>{\r\n            state.isLoading = true;\r\n        });\r\n        builder.addCase(getMe.fulfilled, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isSuccess = true;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(getMe.rejected, (state, action) =>{\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n            state.message = action.payload;\r\n        })\r\n    }\r\n});\r\n\r\nexport const {reset} = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}